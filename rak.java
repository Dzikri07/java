/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uts;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Dzikr
 */
public class rak extends javax.swing.JFrame {
    public DefaultTableModel model; 
    String raks;
    public rak() {
        initComponents();
        HeaderTable();
    }
    
     public void HeaderTable()
     {
        //memberi penamaan pada kolom Jtabel
         model=new DefaultTableModel();
         trak.setModel(model);
         model.addColumn("Kode Rak");
         model.addColumn("Nama Rak");
         datatotabel();
     }
      public void datatotabel()
    {
        //menghapus isi table tblGaji
         model.getDataVector().removeAllElements();
         model.fireTableDataChanged();
            
        try{
              Statement stat=(Statement)koneksi.Getkoneksi().createStatement();
              
              String sql="select *from trak";
              ResultSet rs=stat.executeQuery(sql);
             while (rs.next())
             {
                 Object[] fieldx=new Object[4];
                 fieldx[0]=rs.getString("Kode_Rak");    
                 fieldx[1]=rs.getString("Nama_Rak");  
                 
                 model.addRow(fieldx);
              }             
        }//akhir try
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, 
e.getMessage() );   
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        trak = new javax.swing.JTable();
        fkode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fnama = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        del = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("RAK");

        trak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        trak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trakMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(trak);

        fkode.setText(" ");
        fkode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fkodeActionPerformed(evt);
            }
        });

        jLabel2.setText("Kode Kategori");

        jLabel3.setText("Nama Rak");

        fnama.setText(" ");
        fnama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnamaActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        del.setText("Delete");
        del.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delMouseClicked(evt);
            }
        });
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(save)
                                .addGap(18, 18, 18)
                                .addComponent(del)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(exit))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fkode)
                                    .addComponent(fnama))))))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fkode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(del)
                    .addComponent(exit))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fkodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fkodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fkodeActionPerformed

    private void fnamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnamaActionPerformed

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        // TODO add your handling code here:
        //mouse
    }//GEN-LAST:event_saveMouseClicked

    private void trakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trakMouseClicked
        // TODO add your handling code here
    fnama.setText(model.getValueAt(trak.getSelectedRow(),1)+"");
    fkode.setText(model.getValueAt(trak.getSelectedRow(),0)+"");
    raks=(model.getValueAt(trak.getSelectedRow(),0)+"");
    raks=(model.getValueAt(trak.getSelectedRow(),1)+"");

    }//GEN-LAST:event_trakMouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
    String kodeRak = fkode.getText().trim();
    String namaRak = fnama.getText().trim();

    // üîç Validasi input sebelum simpan/update
    if (kodeRak.isEmpty() || namaRak.isEmpty()) { 
        JOptionPane.showMessageDialog(null, "Kode atau nama rak belum terisi !", "Validasi", JOptionPane.WARNING_MESSAGE);
        return;
    }
    if (kodeRak.length() != 8) {
        JOptionPane.showMessageDialog(null, "Kode Rak harus terdiri dari 8 karakter!", "Validasi", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        Statement StrU = koneksi.Getkoneksi().createStatement();
        Statement StrI = koneksi.Getkoneksi().createStatement();
        Statement Str = koneksi.Getkoneksi().createStatement();

        String sql = "SELECT * FROM trak WHERE Kode_Rak='" + kodeRak + "'";
        ResultSet rs = Str.executeQuery(sql); 

        if (rs.next()) {
            // Jika data sudah ada, konfirmasi update
            int confirm = JOptionPane.showConfirmDialog(null, 
                "Kode Rak sudah ada! Apakah ingin mengupdate data?", 
                "Konfirmasi Update", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.WARNING_MESSAGE);

            if (confirm == JOptionPane.YES_OPTION) {
                // Update data
                String updateSQL = "UPDATE trak SET Nama_Rak = '" + namaRak + "' WHERE Kode_Rak = '" + kodeRak + "'";
                StrU.executeUpdate(updateSQL);
                JOptionPane.showMessageDialog(null, "Data berhasil diubah!", "Update", JOptionPane.INFORMATION_MESSAGE);
                HeaderTable(); // Refresh tabel
            } else {
                JOptionPane.showMessageDialog(null, "Update dibatalkan!", "Batal", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            // Jika data belum ada, insert
            String insertSQL = "INSERT INTO trak (Kode_Rak, Nama_Rak) VALUES ('" + kodeRak + "', '" + namaRak + "')";
            StrI.executeUpdate(insertSQL);
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan!", "Insert", JOptionPane.INFORMATION_MESSAGE);
            HeaderTable(); // Refresh tabel
        }

        // Tutup ResultSet dan Statement
        rs.close();
        Str.close();
        StrU.close();
        StrI.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Update atau Insert Gagal\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_saveActionPerformed

    private void delMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_delMouseClicked

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
                                    
    String kodeRak = fkode.getText().trim();

    // üîç Validasi apakah Kode_Rak sudah diisi
    if (kodeRak.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Harap isi Kode Rak yang ingin dihapus!", "Validasi", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        Statement Str = koneksi.Getkoneksi().createStatement();

        String sql = "SELECT * FROM trak WHERE Kode_Rak='" + kodeRak + "'";
        ResultSet rs = Str.executeQuery(sql);

        if (rs.next()) {
            int confirm = JOptionPane.showConfirmDialog(null, 
                "Apakah Anda yakin ingin menghapus data ini?", 
                "Konfirmasi Hapus", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.WARNING_MESSAGE);

            if (confirm == JOptionPane.YES_OPTION) {
                // Lakukan DELETE
                String deleteSQL = "DELETE FROM trak WHERE Kode_Rak = '" + kodeRak + "'";
                Str.executeUpdate(deleteSQL);
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!", "Hapus", JOptionPane.INFORMATION_MESSAGE);
                HeaderTable(); // Refresh tabel
            } else {
                JOptionPane.showMessageDialog(null, "Hapus dibatalkan!", "Batal", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            // Jika data tidak ditemukan
            JOptionPane.showMessageDialog(null, "Data tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
        }

        // Tutup ResultSet dan Statement
        rs.close();
        Str.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal menghapus data\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    
}
    }//GEN-LAST:event_delActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, 
        "Apakah Anda yakin ingin keluar?", 
        "Konfirmasi Keluar", 
        JOptionPane.YES_NO_OPTION, 
        JOptionPane.QUESTION_MESSAGE);

    if (confirm == JOptionPane.YES_OPTION) {
        System.exit(0);
    }
    }//GEN-LAST:event_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton del;
    private javax.swing.JButton exit;
    private javax.swing.JTextField fkode;
    private javax.swing.JTextField fnama;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton save;
    private javax.swing.JTable trak;
    // End of variables declaration//GEN-END:variables
}
